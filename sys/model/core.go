package model

import (
	"sync"
	"time"
)

/*
系统描述:数据模型系统,redis和mgo 存储策略的集成方案
*/

type (
	ISys interface {
		NewDBModel(tableName string) *Document
	}

	//db日志数据结构
	Autogenerated struct {
		ID  string `json:"ID,omitempty" bson:"_id"`
		UID string `json:"uid"`
		Act string `json:"act"` // insert update delete
		D   []interface{}
	}

	//过期数据
	ModelDataExpired struct {
		key     string              //主key
		mu      sync.RWMutex        //安全锁
		keys    map[string]struct{} //数据集合
		expired time.Time           //过期时间
	}
)

// DB日志操作类型
type LogHandleType string

const (
	LogHandleType_Insert LogHandleType = "insert" //插入
	LogHandleType_Update LogHandleType = "update" //更新
	LogHandleType_Delete LogHandleType = "delete" //删除
)

var (
	defsys ISys
)

func OnInit(config map[string]interface{}, opt ...Option) (err error) {
	var option *Options
	if option, err = newOptions(config, opt...); err != nil {
		return
	}
	defsys, err = newSys(option)
	return
}
func NewSys(opt ...Option) (sys ISys, err error) {
	var option *Options
	if option, err = newOptionsByOption(opt...); err != nil {
		return
	}
	sys, err = newSys(option)
	return
}

func NewDBModel(tableName string) *Document {
	return defsys.NewDBModel(tableName)
}
